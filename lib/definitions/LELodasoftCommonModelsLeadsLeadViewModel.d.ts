import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftCommonModelsLeadsLeadViewModel = {
    leadId: Option<number>;
    borrowerId: Option<number>;
    applicationId: Option<number>;
    firstName: Option<string>;
    lastName: Option<string>;
    socialSecurityNumber: Option<string>;
    birthDate: Option<Date>;
    email: Option<string>;
    phone: Option<string>;
    workPhone: Option<string>;
    fax: Option<string>;
    mailingAddress1: Option<string>;
    mailingAddress2: Option<string>;
    mailingCity: Option<string>;
    mailingState: Option<string>;
    mailingZip: Option<string>;
    creditScore: Option<number>;
    subjectPropertyAddress1: Option<string>;
    subjectPropertyAddress2: Option<string>;
    subjectPropertyCity: Option<string>;
    subjectPropertyState: Option<string>;
    subjectPropertyZip: Option<string>;
    loanAmount: Option<number>;
    appraisedValue: Option<number>;
    cashOutAmount: Option<number>;
    downPayment: Option<number>;
    interestRate: Option<number>;
    loanTypeId: Option<number>;
    loanPurposeId: Option<number>;
    currentLoanUnpaidPrincipalBalance: Option<number>;
    currentLoanEstimatedValue: Option<number>;
    currentLoanInterestRate: Option<number>;
    currentLoanTerm: Option<number>;
    leadContactUserId: Option<string>;
    appointmentDate: Option<Date>;
    appointmentDescription: Option<string>;
    appointmentNotes: Option<string>;
    customData1: Option<string>;
    customData2: Option<string>;
    customData3: Option<string>;
    customData4: Option<string>;
    customData5: Option<string>;
    customData6: Option<string>;
    customData7: Option<string>;
    customData8: Option<string>;
    customData9: Option<string>;
    customData10: Option<string>;
    leadCampaignId: Option<number>;
    leadStatusId: Option<number>;
    referralSource: Option<number>;
    leadSource: Option<string>;
    losRefNumber: Option<string>;
    internalNotes: Option<string>;
    postLeadRequestJson: Option<string>;
    lastAttemptedContact: Option<Date>;
    lastSuccessfulContact: Option<Date>;
    leadListIds: Option<Array<number>>;
    companyId: Option<number>;
    insertedBy: Option<string>;
    dateInserted: Option<Date>;
    updatedBy: Option<string>;
    dateUpdated: Option<Date>;
};
export declare const LELodasoftCommonModelsLeadsLeadViewModelIO: import("io-ts").TypeC<{
    leadId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    borrowerId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    applicationId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    firstName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    lastName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    socialSecurityNumber: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    birthDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    email: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    phone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    workPhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    fax: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    mailingAddress1: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    mailingAddress2: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    mailingCity: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    mailingState: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    mailingZip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    creditScore: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    subjectPropertyAddress1: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    subjectPropertyAddress2: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    subjectPropertyCity: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    subjectPropertyState: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    subjectPropertyZip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    loanAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    appraisedValue: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    cashOutAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    downPayment: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    interestRate: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    loanTypeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    loanPurposeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    currentLoanUnpaidPrincipalBalance: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    currentLoanEstimatedValue: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    currentLoanInterestRate: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    currentLoanTerm: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    leadContactUserId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    appointmentDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    appointmentDescription: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    appointmentNotes: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    customData1: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    customData2: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    customData3: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    customData4: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    customData5: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    customData6: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    customData7: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    customData8: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    customData9: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    customData10: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    leadCampaignId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    leadStatusId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    referralSource: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    leadSource: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    losRefNumber: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    internalNotes: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    postLeadRequestJson: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    lastAttemptedContact: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    lastSuccessfulContact: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    leadListIds: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").NumberC>>;
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
}>;
