import { LELodasoftCommonModelsAdminRecentApplicationView } from '../definitions/LELodasoftCommonModelsAdminRecentApplicationView';
import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftApiModelsAdminPermissionMenu = {
    superAdmin: Option<boolean>;
    admin: Option<boolean>;
    creditMonitoringEnabled: Option<boolean>;
    creditReportingEnabled: Option<boolean>;
    docEditingEnabled: Option<boolean>;
    docGenerationEnabled: Option<boolean>;
    full1003Enabled: Option<boolean>;
    inviteBorrowerCheckedByDefault: Option<boolean>;
    leadManagementEnabled: Option<boolean>;
    multipleCredentialSupportEnabled: Option<boolean>;
    onlineApplicationEnabled: Option<boolean>;
    prequalGenerationEnabled: Option<boolean>;
    digitalAssetVerificationEnabled: Option<boolean>;
    digitalEmploymentVerificationEnabled: Option<boolean>;
    ausEnabled: Option<boolean>;
    losEnabled: Option<boolean>;
    smsAlertsEnabled: Option<boolean>;
    showNewSubmissionForm: Option<boolean>;
    bulkEditTasks: Option<boolean>;
    readOnlyTasks: Option<boolean>;
    userNormal: Option<boolean>;
    companyId: Option<number>;
    stackingOrderId: Option<number>;
    userId: Option<string>;
    recentApplications: Option<Array<LELodasoftCommonModelsAdminRecentApplicationView>>;
};
export declare const LELodasoftApiModelsAdminPermissionMenuIO: import("io-ts").TypeC<{
    superAdmin: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    admin: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    creditMonitoringEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    creditReportingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    docEditingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    docGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    full1003Enabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    inviteBorrowerCheckedByDefault: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    leadManagementEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    multipleCredentialSupportEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    onlineApplicationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    prequalGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    digitalAssetVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    digitalEmploymentVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    ausEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    losEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    smsAlertsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    showNewSubmissionForm: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    bulkEditTasks: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    readOnlyTasks: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    userNormal: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    stackingOrderId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    recentApplications: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
        borrowerId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        applicationId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        displayText: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    }>>>;
}>;
