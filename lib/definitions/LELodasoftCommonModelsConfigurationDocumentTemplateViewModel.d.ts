import { LELodasoftCommonModelsConfigurationDocumentTemplateFieldViewModel } from '../definitions/LELodasoftCommonModelsConfigurationDocumentTemplateFieldViewModel';
import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftCommonModelsConfigurationDocumentTemplateViewModel = {
    documentTemplateId: Option<number>;
    documentTypeId: Option<number>;
    documentTemplateType: Option<'Unspecified' | 'Html' | 'Pdf'>;
    documentTemplateName: Option<string>;
    description: Option<string>;
    headerHtml: Option<string>;
    bodyHtml: Option<string>;
    footerHtml: Option<string>;
    hasPdfData: Option<boolean>;
    pdfData: Option<string>;
    fields: Option<Array<LELodasoftCommonModelsConfigurationDocumentTemplateFieldViewModel>>;
    companyId: Option<number>;
    insertedBy: Option<string>;
    dateInserted: Option<Date>;
    updatedBy: Option<string>;
    dateUpdated: Option<Date>;
};
export declare const LELodasoftCommonModelsConfigurationDocumentTemplateViewModelIO: import("io-ts").TypeC<{
    documentTemplateId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    documentTypeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    documentTemplateType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Unspecified: null;
        Html: null;
        Pdf: null;
    }>>;
    documentTemplateName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    description: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    headerHtml: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    bodyHtml: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    footerHtml: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    hasPdfData: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    pdfData: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    fields: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
        documentTemplateFieldId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        documentTemplateId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        fieldKey: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        fieldType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
            Unspecified: null;
            Text: null;
            CheckBox: null;
            RadioButton: null;
        }>>;
        displayName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        globalMergeFieldKey: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        defaultValue: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        visible: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        editable: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        documentTemplatePageId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>>;
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
}>;
