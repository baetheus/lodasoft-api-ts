import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftCommonModelsMessageMessageViewModel = {
    id: Option<number>;
    campaignId: Option<number>;
    automatedEmailId: Option<number>;
    applicationId: Option<number>;
    borrowerId: Option<number>;
    agentId: Option<number>;
    eventId: Option<number>;
    leadId: Option<number>;
    fromUserId: Option<string>;
    msgType: Option<'Unspecified' | 'UserInvite' | 'BorrowerInvite' | 'AgentInvite' | 'ForgotPassword' | 'DocRequest' | 'DocReject' | 'DocAccepted' | 'StatusUpdate' | 'Reminder' | 'ApplicationEmailCampaign' | 'ContactEmailCampaign' | 'NewMessage' | 'UserCreatedEmail' | 'UserCreatedSms' | 'Test' | 'AppointmentAlert' | 'Referral' | 'CombinedParent'>;
    delivery: Option<'Unspecified' | 'Email' | 'SMS' | 'Toaster'>;
    priority: Option<'Unspecified' | 'Immediate' | 'Queue' | 'QueuedImmediate' | 'Retry'>;
    status: Option<'Unprocessed' | 'InProcess' | 'FailureSmsNotEnabled' | 'Failure' | 'Success' | 'CombinedChild'>;
    to: Option<string>;
    from: Option<string>;
    cc: Option<string>;
    bcc: Option<string>;
    subject: Option<string>;
    body: Option<string>;
    trackingGuid: Option<string>;
    originalOpenDate: Option<Date>;
    mostRecentOpenDate: Option<Date>;
    createDate: Option<Date>;
    lastUpdate: Option<Date>;
    companyId: Option<number>;
    insertedBy: Option<string>;
    dateInserted: Option<Date>;
    updatedBy: Option<string>;
    dateUpdated: Option<Date>;
};
export declare const LELodasoftCommonModelsMessageMessageViewModelIO: import("io-ts").TypeC<{
    id: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    campaignId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    automatedEmailId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    applicationId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    borrowerId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    agentId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    eventId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    leadId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    fromUserId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    msgType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Unspecified: null;
        UserInvite: null;
        BorrowerInvite: null;
        AgentInvite: null;
        ForgotPassword: null;
        DocRequest: null;
        DocReject: null;
        DocAccepted: null;
        StatusUpdate: null;
        Reminder: null;
        ApplicationEmailCampaign: null;
        ContactEmailCampaign: null;
        NewMessage: null;
        UserCreatedEmail: null;
        UserCreatedSms: null;
        Test: null;
        AppointmentAlert: null;
        Referral: null;
        CombinedParent: null;
    }>>;
    delivery: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Unspecified: null;
        Email: null;
        SMS: null;
        Toaster: null;
    }>>;
    priority: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Unspecified: null;
        Immediate: null;
        Queue: null;
        QueuedImmediate: null;
        Retry: null;
    }>>;
    status: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Unprocessed: null;
        InProcess: null;
        FailureSmsNotEnabled: null;
        Failure: null;
        Success: null;
        CombinedChild: null;
    }>>;
    to: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    from: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    cc: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    bcc: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    subject: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    body: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    trackingGuid: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    originalOpenDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    mostRecentOpenDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    createDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    lastUpdate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
}>;
