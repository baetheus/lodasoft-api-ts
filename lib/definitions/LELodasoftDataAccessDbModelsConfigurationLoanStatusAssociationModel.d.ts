import { LELodasoftDataAccessDbModelsConfigurationLoanStatusModel } from '../definitions/LELodasoftDataAccessDbModelsConfigurationLoanStatusModel';
import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftDataAccessDbModelsConfigurationLoanStatusAssociationModel = {
    id: Option<number>;
    loanPurposeId: Option<number>;
    loanStatusId: Option<number>;
    loanStatusModel: Option<LELodasoftDataAccessDbModelsConfigurationLoanStatusModel>;
    borrowerFriendlyStatus: Option<string>;
    borrowerFriendlyBlurb: Option<string>;
    supressBorrowerNotification: Option<boolean>;
    companyId: Option<number>;
    order: Option<number>;
    associatedStatuses: Option<string>;
    isLeadStatusAssociation: Option<boolean>;
};
export declare const LELodasoftDataAccessDbModelsConfigurationLoanStatusAssociationModelIO: import("io-ts").TypeC<{
    id: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    loanPurposeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    loanStatusId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    loanStatusModel: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        loanStatusId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        loanStatusName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        selectByRole: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        order: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        showAsArchive: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        hideFromCounter: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        isLeadStatus: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        emailFromRoleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        roleModel: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
            roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            roleName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            isLoanContact: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            order: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            allowAccessAllLoans: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            allowBorrowerAssignment: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            showOnPortals: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            showNewSubmissionForm: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            bulkEditTasks: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            readOnlyTasks: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            useForCreditMonitoring: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        }>>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>;
    borrowerFriendlyStatus: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    borrowerFriendlyBlurb: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    supressBorrowerNotification: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    order: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    associatedStatuses: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    isLeadStatusAssociation: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
}>;
