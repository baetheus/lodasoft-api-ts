import { LELodasoftCommonModelsMortgagePurchaseCreditViewModel } from '../definitions/LELodasoftCommonModelsMortgagePurchaseCreditViewModel';
import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftCommonModelsMortgageTransactionDetailViewModel = {
    transactionDetailId: Option<number>;
    purchasePriceAmount: Option<number>;
    landAmount: Option<number>;
    alterationsImprovementsAndRepairsAmount: Option<number>;
    refinanceIncludingDebtsToBePaidOffAmount: Option<number>;
    prepaidItemsEstimatedAmount: Option<number>;
    estimatedClosingCostsAmount: Option<number>;
    miAndFundingFeeTotalAmount: Option<number>;
    borrowerPaidDiscountPointsTotalAmount: Option<number>;
    subordinateLienAmount: Option<number>;
    sellerPaidClosingCostsAmount: Option<number>;
    miAndFundingFeeFinancedAmount: Option<number>;
    purchaseCredits: Option<Array<LELodasoftCommonModelsMortgagePurchaseCreditViewModel>>;
    companyId: Option<number>;
    insertedBy: Option<string>;
    dateInserted: Option<Date>;
    updatedBy: Option<string>;
    dateUpdated: Option<Date>;
};
export declare const LELodasoftCommonModelsMortgageTransactionDetailViewModelIO: import("io-ts").TypeC<{
    transactionDetailId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    purchasePriceAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    landAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    alterationsImprovementsAndRepairsAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    refinanceIncludingDebtsToBePaidOffAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    prepaidItemsEstimatedAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    estimatedClosingCostsAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    miAndFundingFeeTotalAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    borrowerPaidDiscountPointsTotalAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    subordinateLienAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    sellerPaidClosingCostsAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    miAndFundingFeeFinancedAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    purchaseCredits: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
        purchaseCreditId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        transactionDetailId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        purchaseCreditType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
            BridgeLoan: null;
            CashOnHand: null;
            CheckingSavings: null;
            DepositOnSalesContract: null;
            EquityOnPendingSale: null;
            EquityOnSoldProperty: null;
            EquityOnSubjectProperty: null;
            GiftFunds: null;
            LifeInsuranceCashValue: null;
            LotEquity: null;
            OtherTypeOfDownPayment: null;
            RentWithOptionToPurchase: null;
            RetirementFunds: null;
            SaleOfChattel: null;
            SecuredBorrowedFunds: null;
            StocksAndBonds: null;
            SweatEquity: null;
            TradeEquity: null;
            TrustFunds: null;
            UnsecuredBorrowedFunds: null;
            EarnestMoney: null;
            RelocationFunds: null;
            EmployerAssistedHousing: null;
            LeasePurchaseFund: null;
            Other: null;
            LenderCredit: null;
        }>>;
        purchaseCreditAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>>;
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
}>;
