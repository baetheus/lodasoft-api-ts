import { LELodasoftCommonModelsConfigurationCustomTaskViewModel } from '../definitions/LELodasoftCommonModelsConfigurationCustomTaskViewModel';
import { LELodasoftCommonModelsConfigurationTaskViewModel } from '../definitions/LELodasoftCommonModelsConfigurationTaskViewModel';
import { LELodasoftCommonModelsLoanLoanDocViewModel } from '../definitions/LELodasoftCommonModelsLoanLoanDocViewModel';
import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftCommonModelsLoanLoanDocTaskViewModel = {
    loanDocTaskId: Option<number>;
    leadId: Option<number>;
    applicationId: Option<number>;
    borrowerId: Option<number>;
    taskId: Option<number>;
    customTaskId: Option<number>;
    loanDocId: Option<number>;
    documentTypeId: Option<number>;
    userId: Option<string>;
    roleId: Option<number>;
    notifyPartyId: Option<string>;
    reviewPartyId: Option<string>;
    templateDocumentUrl: Option<string>;
    taskType: Option<'RequestDocument' | 'ViewDocument' | 'AcknowledgeReceipt' | 'EsignDocument' | 'RequestInformation' | 'PerformAction' | 'OnlineApplication' | 'DigitalAssetVerification'>;
    taskPriority: Option<'Low' | 'Normal' | 'High' | 'Immediate'>;
    description: Option<string>;
    note: Option<string>;
    borrowerFacingNote: Option<string>;
    requestedBy: Option<string>;
    dueDays: Option<number>;
    taskStatus: Option<'Pending' | 'Submitted' | 'Rejected' | 'Approved' | 'NotApplicable' | 'Requested' | 'Completed' | 'ReviewReady'>;
    conditionStatus: Option<'ConditionPending' | 'ConditionCleared' | 'ConditionReOpened'>;
    conditionType: Option<'PTS' | 'PTD' | 'PTF' | 'PTC'>;
    requestBorrower: Option<boolean>;
    condition: Option<boolean>;
    requiresReview: Option<boolean>;
    requestDate: Option<Date>;
    dueDate: Option<Date>;
    submittedDate: Option<Date>;
    acknowledgementDate: Option<Date>;
    completeDate: Option<Date>;
    followUpDate: Option<Date>;
    active: Option<boolean>;
    taskModel: Option<LELodasoftCommonModelsConfigurationTaskViewModel>;
    customTaskModel: Option<LELodasoftCommonModelsConfigurationCustomTaskViewModel>;
    loanDocModel: Option<LELodasoftCommonModelsLoanLoanDocViewModel>;
    companyId: Option<number>;
    insertedBy: Option<string>;
    dateInserted: Option<Date>;
    updatedBy: Option<string>;
    dateUpdated: Option<Date>;
};
export declare const LELodasoftCommonModelsLoanLoanDocTaskViewModelIO: import("io-ts").TypeC<{
    loanDocTaskId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    leadId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    applicationId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    borrowerId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    taskId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    customTaskId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    loanDocId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    documentTypeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    notifyPartyId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    reviewPartyId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    templateDocumentUrl: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    taskType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        RequestDocument: null;
        ViewDocument: null;
        AcknowledgeReceipt: null;
        EsignDocument: null;
        RequestInformation: null;
        PerformAction: null;
        OnlineApplication: null;
        DigitalAssetVerification: null;
    }>>;
    taskPriority: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Low: null;
        Normal: null;
        High: null;
        Immediate: null;
    }>>;
    description: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    note: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    borrowerFacingNote: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    requestedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dueDays: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    taskStatus: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Pending: null;
        Submitted: null;
        Rejected: null;
        Approved: null;
        NotApplicable: null;
        Requested: null;
        Completed: null;
        ReviewReady: null;
    }>>;
    conditionStatus: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        ConditionPending: null;
        ConditionCleared: null;
        ConditionReOpened: null;
    }>>;
    conditionType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        PTS: null;
        PTD: null;
        PTF: null;
        PTC: null;
    }>>;
    requestBorrower: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    condition: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    requiresReview: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    requestDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    dueDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    submittedDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    acknowledgementDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    completeDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    followUpDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    active: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    taskModel: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        taskId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        taskName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        triggerAssociations: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        borrowerTrigger: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
            Loan: null;
            PrimaryBorrower: null;
            AllBorrowers: null;
            SelectBorrowers: null;
        }>>;
        isLeadTask: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        documentTypeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        reviewRequiredRoleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        notifyPartyRoleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        taskType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
            RequestDocument: null;
            ViewDocument: null;
            AcknowledgeReceipt: null;
            EsignDocument: null;
            RequestInformation: null;
            PerformAction: null;
            OnlineApplication: null;
            DigitalAssetVerification: null;
        }>>;
        defaultTaskPriority: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
            Low: null;
            Normal: null;
            High: null;
            Immediate: null;
        }>>;
        dueDays: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        permittedAgentTypes: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        tasksOnCompletion: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        documentDataHeader: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        documentData: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        docDataString: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        requestBorrower: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        alwaysShowPending: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>;
    customTaskModel: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        customTaskId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        taskCategoryId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        loanStatusId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        taskDescription: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        option: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
            Immediately: null;
            OnLoanStatus: null;
        }>>;
        applyTo: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
            Loan: null;
            PrimaryBorrower: null;
            SelectBorrowers: null;
        }>>;
        roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        documentTypeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        reviewRequiredRoleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        notifyPartyRoleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        taskType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
            RequestDocument: null;
            ViewDocument: null;
            AcknowledgeReceipt: null;
            EsignDocument: null;
            RequestInformation: null;
            PerformAction: null;
            OnlineApplication: null;
            DigitalAssetVerification: null;
        }>>;
        defaultTaskPriority: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
            Low: null;
            Normal: null;
            High: null;
            Immediate: null;
        }>>;
        dueDays: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        permittedAgentTypes: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        tasksOnCompletion: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        documentDataHeader: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        documentData: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        docDataString: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        requestBorrower: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        alwaysShowPending: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>;
    loanDocModel: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        loanDocId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        applicationId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        borrowerID: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        documentTypeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        description: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        note: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        expirationDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        retask: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        active: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        docFiles: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
            guid: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            loanDocId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            applicationId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            borrowerId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            documentTypeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            note: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            borrowerNote: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            condition: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            fileName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            mimeType: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            fileData: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            createDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            exportDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            active: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        }>>>;
    }>>;
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
}>;
