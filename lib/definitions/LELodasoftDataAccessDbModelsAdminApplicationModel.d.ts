import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftDataAccessDbModelsAdminApplicationModel = {
    applicationId: Option<number>;
    userId: Option<string>;
    primaryBorrowerId: Option<number>;
    loanStatusId: Option<number>;
    loanTypeId: Option<number>;
    loanPurposeId: Option<number>;
    customDataId: Option<number>;
    refNumber: Option<string>;
    losIdentifier: Option<string>;
    thirdPartyCredentialProviderId: Option<number>;
    losVendor: Option<'Encompass' | 'LendingQb'>;
    loanAmount: Option<number>;
    mipAmount: Option<number>;
    cashOutAmount: Option<number>;
    purchasePrice: Option<number>;
    subordinateLienAmount: Option<number>;
    presentValue: Option<number>;
    downAmount: Option<number>;
    rate: Option<number>;
    productId: Option<number>;
    lenderId: Option<number>;
    term: Option<number>;
    estimatedClosingDate: Option<Date>;
    lockExpirationDate: Option<Date>;
    cdIssueDate: Option<Date>;
    cdSignedDate: Option<Date>;
    originationDate: Option<Date>;
    mailingStreet: Option<string>;
    mailingPOBox: Option<string>;
    mailingCity: Option<string>;
    mailingState: Option<string>;
    mailingZip: Option<string>;
    dateCreate: Option<Date>;
    referralSource: Option<number>;
    companyId: Option<number>;
    insertedBy: Option<string>;
    dateInserted: Option<Date>;
    updatedBy: Option<string>;
    dateUpdated: Option<Date>;
};
export declare const LELodasoftDataAccessDbModelsAdminApplicationModelIO: import("io-ts").TypeC<{
    applicationId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    primaryBorrowerId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    loanStatusId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    loanTypeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    loanPurposeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    customDataId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    refNumber: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    losIdentifier: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    thirdPartyCredentialProviderId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    losVendor: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Encompass: null;
        LendingQb: null;
    }>>;
    loanAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    mipAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    cashOutAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    purchasePrice: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    subordinateLienAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    presentValue: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    downAmount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    rate: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    productId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    lenderId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    term: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    estimatedClosingDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    lockExpirationDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    cdIssueDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    cdSignedDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    originationDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    mailingStreet: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    mailingPOBox: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    mailingCity: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    mailingState: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    mailingZip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateCreate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    referralSource: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
}>;
