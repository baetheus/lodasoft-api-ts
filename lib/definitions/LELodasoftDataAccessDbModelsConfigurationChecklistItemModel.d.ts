import { LELodasoftDataAccessDbModelsConfigurationCompanyModel } from '../definitions/LELodasoftDataAccessDbModelsConfigurationCompanyModel';
import { LELodasoftDataAccessDbModelsConfigurationLoanStatusModel } from '../definitions/LELodasoftDataAccessDbModelsConfigurationLoanStatusModel';
import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftDataAccessDbModelsConfigurationChecklistItemModel = {
    checkListItemId: Option<number>;
    checkListName: Option<string>;
    loanStatusId: Option<number>;
    loanStatus: Option<LELodasoftDataAccessDbModelsConfigurationLoanStatusModel>;
    companyId: Option<number>;
    companyModel: Option<LELodasoftDataAccessDbModelsConfigurationCompanyModel>;
};
export declare const LELodasoftDataAccessDbModelsConfigurationChecklistItemModelIO: import("io-ts").TypeC<{
    checkListItemId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    checkListName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    loanStatusId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    loanStatus: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        loanStatusId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        loanStatusName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        selectByRole: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        order: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        showAsArchive: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        hideFromCounter: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        isLeadStatus: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        emailFromRoleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        roleModel: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
            roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            roleName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            isLoanContact: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            order: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            allowAccessAllLoans: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            allowBorrowerAssignment: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            showOnPortals: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            showNewSubmissionForm: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            bulkEditTasks: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            readOnlyTasks: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            useForCreditMonitoring: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        }>>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>;
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    companyModel: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        companyURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        borrowerURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        agentURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        companyGUID: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        companyName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        address: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        city: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        state: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        zip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        logo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        smallLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        signatureLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        nmls: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        isTemplate: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        docEditingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        docGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        full1003Enabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        leadManagementEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        onlineApplicationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        digitalAssetVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        digitalEmploymentVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        prequalGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        smsAlertsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        emailTestsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        inviteBorrowerCheckedByDefault: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        creditMonitoringEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        creditReportingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        ausEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        losEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        multipleCredentialSupportEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    }>>;
}>;
