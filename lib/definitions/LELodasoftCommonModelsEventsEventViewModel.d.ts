import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftCommonModelsEventsEventViewModel = {
    eventId: Option<number>;
    title: Option<string>;
    eventType: Option<'Appointment' | 'EstimatedClosing' | 'LockExpiration'>;
    description: Option<string>;
    privilege: Option<'Private' | 'Public'>;
    location: Option<string>;
    icon: Option<string>;
    className: Option<string>;
    allDay: Option<boolean>;
    dateCreate: Option<Date>;
    dateStart: Option<Date>;
    dateEnd: Option<Date>;
    eventRepeat: Option<string>;
    remindBeforeMinutes: Option<number>;
    remindToaster: Option<boolean>;
    remindSms: Option<boolean>;
    remindEmail: Option<boolean>;
    userId: Option<string>;
    userName: Option<string>;
    companyId: Option<number>;
    loginName: Option<string>;
    applicationId: Option<number>;
    leadId: Option<number>;
    borrowerId: Option<number>;
    borrowerName: Option<string>;
    borrowerPhone: Option<string>;
    displayAddress: Option<string>;
    readOnly: Option<boolean>;
};
export declare const LELodasoftCommonModelsEventsEventViewModelIO: import("io-ts").TypeC<{
    eventId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    title: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    eventType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Appointment: null;
        EstimatedClosing: null;
        LockExpiration: null;
    }>>;
    description: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    privilege: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Private: null;
        Public: null;
    }>>;
    location: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    icon: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    className: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    allDay: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    dateCreate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    dateStart: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    dateEnd: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    eventRepeat: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    remindBeforeMinutes: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    remindToaster: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    remindSms: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    remindEmail: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    userName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    loginName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    applicationId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    leadId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    borrowerId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    borrowerName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    borrowerPhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    displayAddress: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    readOnly: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
}>;
