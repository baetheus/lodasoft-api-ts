import { LELodasoftApiModelsSharedIntegrationsModel } from '../definitions/LELodasoftApiModelsSharedIntegrationsModel';
import { LELodasoftCommonModelsConfigurationConfigurationViewModel } from '../definitions/LELodasoftCommonModelsConfigurationConfigurationViewModel';
import { LELodasoftCommonModelsEmailDefinedEmailTemplateViewModel } from '../definitions/LELodasoftCommonModelsEmailDefinedEmailTemplateViewModel';
import { LELodasoftCommonModelsThirdPartyThirdPartyCredentialsViewModel } from '../definitions/LELodasoftCommonModelsThirdPartyThirdPartyCredentialsViewModel';
import { LELodasoftDataAccessDbModelsConfigurationDefinedSmsTemplateModel } from '../definitions/LELodasoftDataAccessDbModelsConfigurationDefinedSmsTemplateModel';
import { LELodasoftDataAccessDbModelsSharedEmailServiceModel } from '../definitions/LELodasoftDataAccessDbModelsSharedEmailServiceModel';
import { LELodasoftDataAccessDbModelsSharedSmsServiceModel } from '../definitions/LELodasoftDataAccessDbModelsSharedSmsServiceModel';
import { LELodasoftDataAccessDbModelsUserProfile } from '../definitions/LELodasoftDataAccessDbModelsUserProfile';
import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftApiModelsUserProfileModel = {
    userProfile: Option<LELodasoftDataAccessDbModelsUserProfile>;
    integrations: Option<LELodasoftApiModelsSharedIntegrationsModel>;
    thirdPartyCredentials: Option<Array<LELodasoftCommonModelsThirdPartyThirdPartyCredentialsViewModel>>;
    emailService: Option<LELodasoftDataAccessDbModelsSharedEmailServiceModel>;
    smsService: Option<LELodasoftDataAccessDbModelsSharedSmsServiceModel>;
    userName: Option<string>;
    reminderEmailEnabled: Option<LELodasoftCommonModelsConfigurationConfigurationViewModel>;
    reminderEmailInterval: Option<LELodasoftCommonModelsConfigurationConfigurationViewModel>;
    reminderSmsEnabled: Option<LELodasoftCommonModelsConfigurationConfigurationViewModel>;
    reminderSmsInterval: Option<LELodasoftCommonModelsConfigurationConfigurationViewModel>;
    definedEmailTemplate: Option<LELodasoftCommonModelsEmailDefinedEmailTemplateViewModel>;
    definedSmsTemplate: Option<LELodasoftDataAccessDbModelsConfigurationDefinedSmsTemplateModel>;
};
export declare const LELodasoftApiModelsUserProfileModelIO: import("io-ts").TypeC<{
    userProfile: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        companyModel: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
            companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            companyURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            borrowerURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            agentURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            companyGUID: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            companyName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            address: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            city: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            state: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            zip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            logo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            smallLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            signatureLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            nmls: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            isTemplate: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            docEditingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            docGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            full1003Enabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            leadManagementEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            onlineApplicationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            digitalAssetVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            digitalEmploymentVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            prequalGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            smsAlertsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            emailTestsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            inviteBorrowerCheckedByDefault: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            creditMonitoringEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            creditReportingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            ausEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            losEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            multipleCredentialSupportEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        }>>;
        stackOrderId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        stackingOrder: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
            stakingOrderId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            company: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
                companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
                companyURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                borrowerURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                agentURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                companyGUID: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                companyName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                address: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                city: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                state: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                zip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                logo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                smallLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                signatureLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                nmls: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                isTemplate: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                docEditingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                docGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                full1003Enabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                leadManagementEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                onlineApplicationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                digitalAssetVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                digitalEmploymentVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                prequalGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                smsAlertsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                emailTestsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                inviteBorrowerCheckedByDefault: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                creditMonitoringEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                creditReportingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                ausEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                losEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                multipleCredentialSupportEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            }>>;
            docType: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            associate: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        }>>;
        roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        roleModel: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
            roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            roleName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            isLoanContact: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            order: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            allowAccessAllLoans: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            allowBorrowerAssignment: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            showOnPortals: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            showNewSubmissionForm: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            bulkEditTasks: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            readOnlyTasks: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            useForCreditMonitoring: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        }>>;
        userType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
            Admin: null;
            Borrower: null;
            Agent: null;
        }>>;
        avatarId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        firstName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        lastName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dob: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        timeZone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        title: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        nmls: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        emailSignature: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        smsSignature: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        flagAdmin: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        reportTo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        inviteDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        confirmationDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        confirmationToken: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        cellPhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        workPhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        homePhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        fax: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        mailingStreet: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        mailingPOBox: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        mailingCity: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        mailingState: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        mailingZip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        active: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        currentTimeLogin: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        lastTimeLogin: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        releaseNotesVersion: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        userImage: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        userImageData: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        email: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        emailConfirmed: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        passwordHash: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        securityStamp: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        phoneNumber: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        phoneNumberConfirmed: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        twoFactorEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        lockoutEndDateUtc: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        lockoutEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        accessFailedCount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        roles: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
            userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        }>>>;
        claims: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
            id: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            claimType: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            claimValue: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        }>>>;
        logins: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
            loginProvider: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            providerKey: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        }>>>;
        id: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        userName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    }>>;
    integrations: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        zillow: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
            leadPostUrl: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        }>>;
        leadPoint: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
            leadPostUrl: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        }>>;
        onlineApplications: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
            wizardUrls: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
                name: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                url: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            }>>>;
        }>>;
        thirdPartyCredentials: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
            credentialId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            credentialType: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            vendorName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            url: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            userName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            password: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            credentialProviderId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            thirdPartyKeyValuePairs: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
                thirdPartyKeyValueId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
                key: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                value: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                credentialId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
                companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
                insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
                updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            }>>>;
            companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        }>>>;
    }>>;
    thirdPartyCredentials: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
        credentialId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        credentialType: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        vendorName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        url: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        userName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        password: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        credentialProviderId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        thirdPartyKeyValuePairs: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
            thirdPartyKeyValueId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            key: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            value: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            credentialId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        }>>>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>>;
    emailService: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        serviceType: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        server: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        port: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        userName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        password: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        isSecure: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        servicesUrl: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    }>>;
    smsService: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        smsServiceId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        serviceType: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        fromPhoneNumber: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        accountIdentifier: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        authToken: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>;
    userName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    reminderEmailEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        id: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        key: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        value: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        valueStr: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>;
    reminderEmailInterval: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        id: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        key: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        value: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        valueStr: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>;
    reminderSmsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        id: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        key: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        value: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        valueStr: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>;
    reminderSmsInterval: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        id: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        key: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        value: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        valueStr: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>;
    definedEmailTemplate: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        id: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        onlineAppRegistrationOverride: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        onlineAppRegistrationSubject: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        onlineAppRegistrationEmail: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        onlineAppStartedOverride: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        onlineAppStartedSubject: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        onlineAppStartedEmail: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        onlineAppSubmissionOverride: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        onlineAppSubmissionSubject: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        onlineAppSubmissionEmail: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        inviteOverride: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        inviteSubject: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        inviteEmail: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        inviteAgentOverride: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        inviteAgentSubject: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        inviteAgentEmail: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        requestOverride: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        requestSubject: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        requestEmail: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        reminderOverride: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        reminderSubject: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        reminderEmail: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        images: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
            emailTemplateImageId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            emailTemplateImageGuid: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            definedEmailTemplateId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            emailTemplateId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            mimeType: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            imageData: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        }>>>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>;
    definedSmsTemplate: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        id: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        company: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
            companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            companyURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            borrowerURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            agentURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            companyGUID: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            companyName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            address: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            city: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            state: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            zip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            logo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            smallLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            signatureLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            nmls: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            isTemplate: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            docEditingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            docGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            full1003Enabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            leadManagementEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            onlineApplicationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            digitalAssetVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            digitalEmploymentVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            prequalGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            smsAlertsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            emailTestsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            inviteBorrowerCheckedByDefault: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            creditMonitoringEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            creditReportingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            ausEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            losEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            multipleCredentialSupportEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        }>>;
        userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        user: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
            companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            companyModel: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
                companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
                companyURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                borrowerURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                agentURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                companyGUID: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                companyName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                address: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                city: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                state: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                zip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                logo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                smallLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                signatureLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                nmls: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                isTemplate: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                docEditingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                docGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                full1003Enabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                leadManagementEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                onlineApplicationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                digitalAssetVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                digitalEmploymentVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                prequalGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                smsAlertsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                emailTestsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                inviteBorrowerCheckedByDefault: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                creditMonitoringEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                creditReportingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                ausEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                losEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                multipleCredentialSupportEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            }>>;
            stackOrderId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            stackingOrder: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
                stakingOrderId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
                companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
                company: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
                    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
                    companyURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    borrowerURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    agentURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    companyGUID: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    companyName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    address: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    city: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    state: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    zip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    logo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    smallLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    signatureLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    nmls: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                    isTemplate: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    docEditingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    docGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    full1003Enabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    leadManagementEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    onlineApplicationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    digitalAssetVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    digitalEmploymentVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    prequalGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    smsAlertsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    emailTestsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    inviteBorrowerCheckedByDefault: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    creditMonitoringEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    creditReportingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    ausEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    losEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                    multipleCredentialSupportEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                }>>;
                docType: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                associate: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            }>>;
            roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            roleModel: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
                roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
                roleName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                isLoanContact: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                order: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
                allowAccessAllLoans: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                allowBorrowerAssignment: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                showOnPortals: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                showNewSubmissionForm: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                bulkEditTasks: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                readOnlyTasks: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                useForCreditMonitoring: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
                companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
                insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
                updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            }>>;
            userType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
                Admin: null;
                Borrower: null;
                Agent: null;
            }>>;
            avatarId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            firstName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            lastName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            dob: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            timeZone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            title: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            nmls: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            emailSignature: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            smsSignature: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            flagAdmin: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            reportTo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            inviteDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            confirmationDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            confirmationToken: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            cellPhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            workPhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            homePhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            fax: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            mailingStreet: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            mailingPOBox: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            mailingCity: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            mailingState: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            mailingZip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            active: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            currentTimeLogin: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            lastTimeLogin: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            releaseNotesVersion: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            userImage: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            userImageData: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            email: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            emailConfirmed: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            passwordHash: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            securityStamp: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            phoneNumber: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            phoneNumberConfirmed: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            twoFactorEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            lockoutEndDateUtc: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            lockoutEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            accessFailedCount: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            roles: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
                userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            }>>>;
            claims: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
                id: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
                userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                claimType: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                claimValue: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            }>>>;
            logins: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").TypeC<{
                loginProvider: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                providerKey: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
                userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            }>>>;
            id: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            userName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        }>>;
        onlineAppRegistrationOverride: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        onlineAppRegistrationSms: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        inviteOverride: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        inviteSms: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        inviteAgentOverride: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        inviteAgentSms: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        requestOverride: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        requestSms: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        reminderOverride: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        reminderSms: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    }>>;
}>;
