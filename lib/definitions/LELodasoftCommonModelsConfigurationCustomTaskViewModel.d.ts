import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftCommonModelsConfigurationCustomTaskViewModel = {
    customTaskId: Option<number>;
    taskCategoryId: Option<number>;
    loanStatusId: Option<number>;
    taskDescription: Option<string>;
    option: Option<'Immediately' | 'OnLoanStatus'>;
    applyTo: Option<'Loan' | 'PrimaryBorrower' | 'SelectBorrowers'>;
    roleId: Option<number>;
    documentTypeId: Option<number>;
    reviewRequiredRoleId: Option<number>;
    notifyPartyRoleId: Option<number>;
    taskType: Option<'RequestDocument' | 'ViewDocument' | 'AcknowledgeReceipt' | 'EsignDocument' | 'RequestInformation' | 'PerformAction' | 'OnlineApplication' | 'DigitalAssetVerification'>;
    defaultTaskPriority: Option<'Low' | 'Normal' | 'High' | 'Immediate'>;
    dueDays: Option<number>;
    permittedAgentTypes: Option<string>;
    tasksOnCompletion: Option<string>;
    documentDataHeader: Option<string>;
    documentData: Option<string>;
    docDataString: Option<string>;
    requestBorrower: Option<boolean>;
    alwaysShowPending: Option<boolean>;
    companyId: Option<number>;
    insertedBy: Option<string>;
    dateInserted: Option<Date>;
    updatedBy: Option<string>;
    dateUpdated: Option<Date>;
};
export declare const LELodasoftCommonModelsConfigurationCustomTaskViewModelIO: import("io-ts").TypeC<{
    customTaskId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    taskCategoryId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    loanStatusId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    taskDescription: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    option: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Immediately: null;
        OnLoanStatus: null;
    }>>;
    applyTo: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Loan: null;
        PrimaryBorrower: null;
        SelectBorrowers: null;
    }>>;
    roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    documentTypeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    reviewRequiredRoleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    notifyPartyRoleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    taskType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        RequestDocument: null;
        ViewDocument: null;
        AcknowledgeReceipt: null;
        EsignDocument: null;
        RequestInformation: null;
        PerformAction: null;
        OnlineApplication: null;
        DigitalAssetVerification: null;
    }>>;
    defaultTaskPriority: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Low: null;
        Normal: null;
        High: null;
        Immediate: null;
    }>>;
    dueDays: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    permittedAgentTypes: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    tasksOnCompletion: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    documentDataHeader: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    documentData: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    docDataString: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    requestBorrower: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    alwaysShowPending: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
}>;
