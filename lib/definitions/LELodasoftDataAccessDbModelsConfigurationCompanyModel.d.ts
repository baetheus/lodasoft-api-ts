import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftDataAccessDbModelsConfigurationCompanyModel = {
    companyId: Option<number>;
    companyURL: Option<string>;
    borrowerURL: Option<string>;
    agentURL: Option<string>;
    companyGUID: Option<string>;
    companyName: Option<string>;
    address: Option<string>;
    city: Option<string>;
    state: Option<string>;
    zip: Option<string>;
    logo: Option<string>;
    smallLogo: Option<string>;
    signatureLogo: Option<string>;
    nmls: Option<string>;
    isTemplate: Option<boolean>;
    docEditingEnabled: Option<boolean>;
    docGenerationEnabled: Option<boolean>;
    full1003Enabled: Option<boolean>;
    leadManagementEnabled: Option<boolean>;
    onlineApplicationEnabled: Option<boolean>;
    digitalAssetVerificationEnabled: Option<boolean>;
    digitalEmploymentVerificationEnabled: Option<boolean>;
    prequalGenerationEnabled: Option<boolean>;
    smsAlertsEnabled: Option<boolean>;
    emailTestsEnabled: Option<boolean>;
    inviteBorrowerCheckedByDefault: Option<boolean>;
    creditMonitoringEnabled: Option<boolean>;
    creditReportingEnabled: Option<boolean>;
    ausEnabled: Option<boolean>;
    losEnabled: Option<boolean>;
    multipleCredentialSupportEnabled: Option<boolean>;
};
export declare const LELodasoftDataAccessDbModelsConfigurationCompanyModelIO: import("io-ts").TypeC<{
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    companyURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    borrowerURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    agentURL: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    companyGUID: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    companyName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    address: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    city: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    state: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    zip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    logo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    smallLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    signatureLogo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    nmls: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    isTemplate: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    docEditingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    docGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    full1003Enabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    leadManagementEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    onlineApplicationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    digitalAssetVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    digitalEmploymentVerificationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    prequalGenerationEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    smsAlertsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    emailTestsEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    inviteBorrowerCheckedByDefault: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    creditMonitoringEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    creditReportingEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    ausEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    losEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    multipleCredentialSupportEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
}>;
