import { LELodasoftCommonModelsMortgageAddressViewModel } from '../definitions/LELodasoftCommonModelsMortgageAddressViewModel';
import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftCommonModelsMortgageReoViewModel = {
    reoId: Option<number>;
    borrowerId: Option<number>;
    addressId: Option<number>;
    typeOfProperty: Option<'SingleFamily' | 'Condo' | 'Townhouse' | 'Coop' | 'TwoToFourUnitProperty' | 'MultifamilyMoreThanFourUnits' | 'CommercialNonResidential' | 'MixedUseResidential' | 'Farm' | 'HomeAndBusinessCombined' | 'Land'>;
    dispositionStatus: Option<'Sold' | 'PendingSale' | 'RetainForPrimaryOrSecondaryResidence' | 'RentalProperty'>;
    marketValue: Option<number>;
    amountOfMortgage: Option<number>;
    grossRentalIncome: Option<number>;
    netRentalIncome: Option<number>;
    mortgagePayment: Option<number>;
    monthlyMiscExpenses: Option<number>;
    isCurrentResidence: Option<boolean>;
    isSubjectProperty: Option<boolean>;
    address: Option<LELodasoftCommonModelsMortgageAddressViewModel>;
    companyId: Option<number>;
    insertedBy: Option<string>;
    dateInserted: Option<Date>;
    updatedBy: Option<string>;
    dateUpdated: Option<Date>;
};
export declare const LELodasoftCommonModelsMortgageReoViewModelIO: import("io-ts").TypeC<{
    reoId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    borrowerId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    addressId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    typeOfProperty: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        SingleFamily: null;
        Condo: null;
        Townhouse: null;
        Coop: null;
        TwoToFourUnitProperty: null;
        MultifamilyMoreThanFourUnits: null;
        CommercialNonResidential: null;
        MixedUseResidential: null;
        Farm: null;
        HomeAndBusinessCombined: null;
        Land: null;
    }>>;
    dispositionStatus: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        Sold: null;
        PendingSale: null;
        RetainForPrimaryOrSecondaryResidence: null;
        RentalProperty: null;
    }>>;
    marketValue: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    amountOfMortgage: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    grossRentalIncome: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    netRentalIncome: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    mortgagePayment: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    monthlyMiscExpenses: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    isCurrentResidence: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    isSubjectProperty: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    address: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        addressId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        typeOfAddress: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
            PresentAddress: null;
            FormerAddress: null;
            MailingAddress: null;
        }>>;
        address1: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        city: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        state: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        zipCode: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        country: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        active: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>;
    companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
}>;
