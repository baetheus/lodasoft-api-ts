import { LELodasoftCommonModelsAdminAgentViewModel } from '../definitions/LELodasoftCommonModelsAdminAgentViewModel';
import { Option } from 'fp-ts/lib/Option';
export declare type LELodasoftApiModelsAgentAgentFull = {
    agent: Option<LELodasoftCommonModelsAdminAgentViewModel>;
    portalUserName: Option<string>;
    agentTypeId: Option<number>;
    isEdit: Option<boolean>;
    accountStatus: Option<'NotInvited' | 'Invited' | 'Live'>;
};
export declare const LELodasoftApiModelsAgentAgentFullIO: import("io-ts").TypeC<{
    agent: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
        agentId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        userId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        userProfile: import("io-ts-types").OptionFromNullableC<import("io-ts").TypeC<{
            id: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            stackOrderId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            roleId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
            userName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            userType: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
                Admin: null;
                Borrower: null;
                Agent: null;
            }>>;
            avatarId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            firstName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            lastName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            timeZone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            title: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            nmls: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            emailSignature: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            smsSignature: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            flagAdmin: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            reportTo: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            inviteDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            confirmationDate: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
            twoFactorEnabled: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            email: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            emailConfirmed: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            phoneNumber: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            phoneNumberConfirmed: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
            cellPhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            workPhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            homePhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            fax: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            mailingStreet: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            mailingPOBox: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            mailingCity: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            mailingState: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            mailingZip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
            active: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        }>>;
        firstName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        lastName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        title: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        department: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        orgName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        nmlsId: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        mobilePhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        workPhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        extPhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        fax: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        email: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        assistantName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        assistantPhone: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        assistantEmail: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        doNotCall: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        doNotEmail: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        alertViaSms: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
        mailingStreet: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        mailingPOBox: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        mailingCity: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        mailingState: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        mailingZip: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        createDate: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        modifiedDate: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        agentListIds: import("io-ts-types").OptionFromNullableC<import("io-ts").ArrayC<import("io-ts").NumberC>>;
        companyId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
        insertedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateInserted: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
        updatedBy: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
        dateUpdated: import("io-ts-types").OptionFromNullableC<import("io-ts-types").DateFromISOStringC>;
    }>>;
    portalUserName: import("io-ts-types").OptionFromNullableC<import("io-ts").StringC>;
    agentTypeId: import("io-ts-types").OptionFromNullableC<import("io-ts").NumberC>;
    isEdit: import("io-ts-types").OptionFromNullableC<import("io-ts").BooleanC>;
    accountStatus: import("io-ts-types").OptionFromNullableC<import("io-ts").KeyofC<{
        NotInvited: null;
        Invited: null;
        Live: null;
    }>>;
}>;
